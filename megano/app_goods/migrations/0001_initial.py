# Generated by Django 4.2.1 on 2023-06-11 06:42

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app_users', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('src', models.ImageField(default='app_goods/images/default.png', upload_to='app_goods/images/product_avatars/', verbose_name='Ссылка картинки')),
                ('alt', models.CharField(max_length=128, verbose_name='Описание')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Title')),
                ('price', models.IntegerField(default=1.0)),
                ('description', models.TextField(max_length=10000, verbose_name='Description')),
                ('fullDescription', models.TextField(max_length=10000, verbose_name='Full description')),
                ('count', models.IntegerField(default=0)),
                ('date', models.DateField(auto_now=True)),
                ('freeDelivery', models.BooleanField(default=True)),
                ('rating', models.FloatField(blank=True, default=1)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='category', to='app_goods.category')),
                ('images', models.ManyToManyField(related_name='activePhoto', to='app_goods.image', verbose_name='Фото')),
            ],
        ),
        migrations.CreateModel(
            name='Spec',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
                ('value', models.CharField(blank=True, max_length=100, null=True, verbose_name='Value')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subcategory_image', to='app_goods.image', verbose_name='Фото')),
            ],
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(default=1.0)),
                ('salePrice', models.IntegerField(default=1.0)),
                ('dateFrom', models.DateField(default=None)),
                ('dateTo', models.DateField(default=None)),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Title')),
                ('images', models.ManyToManyField(related_name='sale_images', to='app_goods.image')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sale_products', to='app_goods.product')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items', models.ManyToManyField(related_name='items', to='app_goods.saleitem')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=1000, verbose_name='Text')),
                ('date', models.DateField(auto_now=True, verbose_name='Date')),
                ('rate', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=100, verbose_name='Rate')),
                ('email', models.EmailField(default='anonim@mail.ru', max_length=254)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app_users.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='ProductLimited',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('products', models.ManyToManyField(related_name='limitedProducts', to='app_goods.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='reviews',
            field=models.ManyToManyField(related_name='product_reviews', to='app_goods.review'),
        ),
        migrations.AddField(
            model_name='product',
            name='specifications',
            field=models.ManyToManyField(related_name='specifications', to='app_goods.spec'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(related_name='tag', to='app_goods.tag'),
        ),
        migrations.CreateModel(
            name='PopularProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('products', models.ManyToManyField(related_name='popular', to='app_goods.product')),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='image',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='category_image', to='app_goods.image', verbose_name='Фото'),
        ),
        migrations.AddField(
            model_name='category',
            name='subcategories',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app_goods.subcategory'),
        ),
        migrations.CreateModel(
            name='Catalog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True, verbose_name='Title')),
                ('image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='catalog_image', to='app_goods.image', verbose_name='Фото')),
                ('items', models.ManyToManyField(related_name='items', to='app_goods.product')),
                ('subcategories', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app_goods.subcategory')),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.ManyToManyField(related_name='banner_image', to='app_goods.image', verbose_name='Фото')),
                ('products', models.ManyToManyField(related_name='banners_products', to='app_goods.product')),
            ],
        ),
    ]
